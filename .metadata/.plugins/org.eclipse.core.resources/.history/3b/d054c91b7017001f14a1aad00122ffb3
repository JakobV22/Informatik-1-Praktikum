//////////////////////////////////////////////////////////////////////////////
// Praktikum Informatik 1 MMXXIV
// Versuch 04: Einf�hrung Klasse
//
// Datei:  main.cpp
// Inhalt: Hauptprogramm
//////////////////////////////////////////////////////////////////////////////
/*
#include "Vektor.h"

void horizontRechner(double erdradius, double plattform, double koerpergroesse)
{
	std::cout << std::fixed;
	std::cout << std::setprecision(4);


	Vektor vektorAuge(0, erdradius + plattform + koerpergroesse, 0);
	Vektor vektorErdradius(0, erdradius, 0);
	Vektor vektorRadial(0, erdradius, 0);

	int counter1;
	int counter2;

	double angle = M_PI / 18000; // 0,01 °

	for (counter1 = 0; vektorRadial.winkel(vektorRadial.sub(vektorAuge)) != 90;
			counter1++)
	{
		for (counter2 = 0;
				vektorRadial.winkel(vektorRadial.sub(vektorAuge)) >= 90;
				counter2++) // bis der Winkel zwischen Radialvektor und Sicht die 90 ° unterschreitet
		{
			vektorRadial.rotiereUmZ(angle);
		}
		vektorRadial.rotiereUmZ(-angle);	//Zurücksetzen des Winkels auf letzten Winkel > 90°
		angle /= 10;						// Winkel verkleinern für höhere Präzision
		counter1 = +counter2;				// Zähler übertragen
	}										// erneute iterieren bis WInkel zwischen Radialvektor und sich < 90°, etc.

	std::cout << "Sie können " << vektorRadial.sub(vektorAuge).laenge() / 1000
			<< " Km weit sehen." << std::endl;
	std::cout << "Sie sind " << vektorAuge.sub(vektorErdradius).laenge()
			<< " Meter hoch." << std::endl;
	std::cout << "Der Winkel beträgt " << vektorRadial.winkel(vektorErdradius)
			<< " Grad." << std::endl;
	std::cout << "Anzahl Schritte: " << counter1 << std::endl;

}
int main()
{
	/*
	Vektor vector1(1, 0, 0);
	Vektor vector2(0, 1, 0);

	vector1.ausgabe();
	vector2.ausgabe();

	Vektor vector3(1, 1, 3);
	Vektor vector4(3, 4, 0);

	std::cout << "Laenge: \n " << vector3.laenge() << std::endl; // Test Laenge()
	std::cout << vector4.laenge() << std::endl;

	std::cout << "\nSubtraktion:\n" << std::endl;
	vector1.sub(vector2).ausgabe();				// Test Sub
	vector4.sub(vector3).ausgabe();

	std::cout << "\nSkalaprodukt:\n" << vector4.skalarProd(vector3)
			<< std::endl; // Test Skalarprodukt
	std::cout << vector1.skalarProd(vector2) << std::endl;

	std::cout << "\nWinkel: \n" << vector1.winkel(vector2) << std::endl; // Test Winkel
	std::cout << vector1.winkel(vector3) << std::endl;

	std::cout << "\nRotation: " << std::endl; 		// Test Rotation
	vector1.rotiereUmZ(M_PI / 2);
	vector4.rotiereUmZ(M_PI);
	vector1.ausgabe();
	vector4.ausgabe();

	std::cout << "AUFGABE \n \n" << std::endl;
*/

/*

	double koerpergroesse = 1.7;
	double plattform = 555.7;
	double erdradius = 6371000;

	horizontRechner(erdradius, plattform, koerpergroesse);

	return 0;

}
*/
//////////////////////////////////////////////////////////////////////////////
// Praktikum Informatik 1 MMXXIV
// Versuch 04: Einf�hrung Klasse
//
// Datei:  main.cpp
// Inhalt: Hauptprogramm
//////////////////////////////////////////////////////////////////////////////

#include "Vektor.h"

#define earthRadius 6371000
#define eyeHeight (555.7 + 1.7)

bool erdeSichtbar(const double winkel)
{
    const double rad = winkel * M_PI / 180;
    Vektor radiusVektor(earthRadius, 0, 0);
    radiusVektor.rotiereUmZ(rad);
    if (radiusVektor.winkel(radiusVektor.sub(Vektor(earthRadius + eyeHeight, 0, 0))) > M_PI / 2)
    {
        return true;
    }
    else
    {
        return false;
    }
}

double getSichtweite(const double winkel)
{
    const double rad = winkel * M_PI / 180;
    Vektor radiusVektor(earthRadius, 0, 0);
    radiusVektor.rotiereUmZ(rad);
    radiusVektor = radiusVektor.sub(Vektor(earthRadius + eyeHeight, 0, 0));
    return radiusVektor.laenge();
}

int main()
{

    const Vektor eye(2, 0, 0);
    Vektor radiusVektor(1, 0, 0);

    double winkel = 15;

    std::cout << std::fixed << std::setprecision(10);

    double increment = 1.0;
    bool lastVisible = true;
    int counter = 0;
    int counter2 = 0;
    while (abs(increment) > 0.0000000001)
    {
        counter++;
        counter2++;
        if (erdeSichtbar(winkel) && !lastVisible)
        {
            std::cout << "Zu weit rückwärts gedreht. Ändere Schrittweite von " << increment << " zu ";
            increment /= -10;
            std::cout << increment << std::endl;
            std::cout << "Winkel: " << winkel << "\tSchritte in diesem Durchlauf: " << counter2 << std::endl;
            counter2 = 0;
        }
        else if (!erdeSichtbar(winkel) && lastVisible)
        {
            std::cout << "Zu weit vorwärts gedreht. Ändere Schrittweite von " << increment << " zu ";
            increment /= -10;
            std::cout << increment << std::endl;
            std::cout << "Winkel: " << winkel << "\tSchritte in diesem Durchlauf: " << counter2 << std::endl;
            counter2 = 0;
        }
        lastVisible = erdeSichtbar(winkel);
        winkel += increment;
    }

    std::cout << std::endl
              << "Sie können " << getSichtweite(winkel) / 1000 << "Km weit sehen." << std::endl;
    std::cout << "Sie sind " << eyeHeight << "Meter hoch." << std::endl;
    std::cout << "Der Winkel beträgt " << winkel << " Grad." << std::endl;
    std::cout << "Anzahl Schritte: " << counter << std::endl;

    return 0;
}
